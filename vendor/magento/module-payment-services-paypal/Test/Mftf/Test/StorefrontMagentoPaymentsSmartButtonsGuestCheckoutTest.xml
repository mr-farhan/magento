<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontMagentoPaymentsSmartButtonsGuestCheckoutTest">
        <annotations>
            <features value="MagentoPaymentsPayPalSmartButtons"/>
            <stories value="Guest checkout using PayPal Smart Buttons"/>
            <title value="Guest checkout using PayPal Smart Buttons"/>
            <description value="Users can checkout using PayPal Smart Buttons as guests"/>
            <severity value="CRITICAL"/>
            <testCaseId value="guest-checkout-smart-buttons"/>
            <group value="magento-payments"/>
        </annotations>
        <before>
            <magentoCLI command="config:set {{EnableFreeShippingConfigData.path}} {{EnableFreeShippingConfigData.value}}" stepKey="enableFreeShipping"/>
            <!-- Login -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>
            <actionGroup ref="AdminConfigurePaymentMethodActionGroup" stepKey="configurePaymentMethod">
                <argument name="methodName" value="payment_services_paypal_smart_buttons"/>
                <argument name="methodAction" value="authorize_capture"/>
            </actionGroup>
            <!-- Create Product -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
        </before>
        <after>
            <magentoCLI command="config:set {{DisableFreeShippingMethod.path}} {{DisableFreeShippingMethod.value}}" stepKey="disableFreeShipping"/>
            <actionGroup ref="AdminDisablePaymentMethodActionGroup" stepKey="disablePaymentMethod" />
            <!-- Delete product -->
            <deleteData stepKey="deleteCategory" createDataKey="createCategory"/>
            <deleteData stepKey="deleteProduct" createDataKey="createProduct"/>
            <!-- Logout -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
        </after>

        <!-- Navigate to storefront as a guest -->
        <amOnPage url="{{StorefrontCategoryPage.url($$createCategory.name$$)}}" stepKey="navigateToCategoryPage"/>
        <actionGroup ref="StorefrontAddProductToCartFromCategoryActionGroup" stepKey="addProductToCart">
            <argument name="productName" value="$$createProduct.name$$"/>
        </actionGroup>
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>

        <!-- Fill in the guest customer's shipping information -->
        <actionGroup ref="GuestCheckoutFillingShippingSectionActionGroup" stepKey="guestCheckoutFillingShippingSection">
            <argument name="customerVar" value="CustomerEntityOne"/>
            <argument name="customerAddressVar" value="CustomerAddressSimple"/>
        </actionGroup>

        <!-- Click on PayPal Smart Buttons radio button -->
        <waitForElement selector="{{CheckoutPaymentSection.paymentSectionTitle}}" stepKey="waitForPlaceOrderButton"/>
        <click selector="{{CheckoutPaymentSection.MagentoPaymentServicesSmartButtonsRadio}}" stepKey="clickSmartButtonsRadio"/>

        <!-- Click PayPal button -->
        <actionGroup ref="StorefrontClickPayPalButtonActionGroup" stepKey="clickPayPalBtn">
            <argument name="selector" value="{{SmartButtonsPaymentSection.ButtonsIframe}}"/>
        </actionGroup>

        <!-- Login to PayPal -->
        <actionGroup ref="StorefrontLoginToPaypalAccountActionGroup" stepKey="loginToPayPal">
            <argument name="payerName" value="{{Payer.firstName}}"/>
        </actionGroup>

        <!-- Set payment in PayPal -->
        <actionGroup ref="StorefrontSetPaymentInPaypalActionGroup" stepKey="submitPayment"/>

        <!-- I see order successful page -->
        <waitForElement selector="{{CheckoutSuccessMainSection.successTitle}}" stepKey="waitForLoadSuccessPageTitle"/>
        <waitForElement selector="{{CheckoutSuccessMainSection.success}}" time="30" stepKey="waitForLoadSuccessPage"/>
        <see selector="{{CheckoutSuccessMainSection.successTitle}}" userInput="Thank you for your purchase!" stepKey="checkOrderSuccessPageTitle"/>

        <!-- Check order status on Admin -->
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="getOrderNumber"/>
        <actionGroup ref="OpenOrderByIdActionGroup" stepKey="addFilterToGridAndOpenOrder">
            <argument name="orderId" value="{$getOrderNumber}"/>
        </actionGroup>
        <actionGroup ref="AdminAssertNoAuthorizeButtonOnOrderPageActionGroup" stepKey="dontSeeOrderWaitingForAuthorize"/>
        <actionGroup ref="AdminOrderViewCheckStatusActionGroup" stepKey="checkOrderStatus">
            <argument name="status" value="Processing"/>
        </actionGroup>
    </test>
</tests>
